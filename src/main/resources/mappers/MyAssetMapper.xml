<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myasset.myasset.mapper.MyAssetMapper">
    <select id="selectTrList" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="com.myasset.myasset.vo.MyAssetVo">
        SELECT 
            ASSET_NM assetNm,
            ASSET_CATG_NM assetCatgNm,
            TR_METHOD trMethod,
            TR_AMT trAmt,
            TR_PRICE trPrice,
            TR_TOTPRICE trTotprice,
            TR_COST trCost,
            TR_RESULT trResult,
            TR_EARNRATE trEarnrate,
            TR_DATE trDate
        FROM TRADE_RECORD
        WHERE 1 = 1
        <if test="assetNm != null and assetNm != ''">
        AND ASSET_NM = #{assetNm}
        </if>
        <if test="trMethod != null and trMethod != ''">
        AND TR_METHOD = #{trMethod}
        </if>
        
        
        <if test="startDate != null and startDate != ''">
        <![CDATA[
        /*시작일자*/
            AND TR_DATE >= DATE_FORMAT(CONCAT(#{startDate},' /00/00/00'), '%Y/%m/%d %H:%i:%s')
        ]]>
        </if>
        
        <if test="endDate != null and endDate != ''">
        <![CDATA[
            /*종료일자*/
            AND TR_DATE <= DATE_FORMAT(CONCAT(#{endDate},' /23/59/59'), '%Y/%m/%d %H:%i:%s')
        ]]>
        </if>
        
        <choose>
            <when test="sortType == 'asc'">
                <if test="sortNm == 'date'">
                ORDER BY TR_DATE
                </if>
                <if test="sortNm == 'assetNm'">
                ORDER BY ASSET_NM
                </if>
            </when>
            <otherwise>
                <if test="sortNm == 'date'">
                ORDER BY TR_DATE desc
                </if>
                <if test="sortNm == 'assetNm'">
                ORDER BY ASSET_NM desc
                </if>
            </otherwise>
        </choose>
        
        <if test="recordCountPerPage != null and recordCountPerPage != ''">
        LIMIT #{recordCountPerPage} OFFSET #{pageIndex}
        </if>
    </select>

    <select id="selectTrListCnt" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="String">
        SELECT COUNT(*)
        FROM TRADE_RECORD
        WHERE 1 = 1
        <if test="assetNm != null and assetNm != ''">
        AND ASSET_NM = #{assetNm}
        </if>
        <if test="trMethod != null and trMethod != ''">
        AND TR_METHOD = #{trMethod}
        </if>
        ORDER BY TR_DATE
    </select>

    <select id="selectMyAssetInfo" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="com.myasset.myasset.vo.MyAssetVo">
        SELECT *
        FROM MYASSETS
    </select>

    <select id="selectAssetCatgList" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="com.myasset.myasset.vo.MyAssetVo">
        SELECT 
        asset_catg_nm assetCatgNm
        ,asset_catg_cd assetCatgCd
        FROM ASSET_CATG
    </select>

    <insert id="insertTrRecord" parameterType="com.myasset.myasset.vo.MyAssetVo">
        INSERT INTO `myasset`.`trade_record` (`asset_nm`, `asset_catg_nm`, `tr_method`, `tr_amt`, `tr_price`, `tr_totprice`, `tr_cost`
        <if test="trMethod == '매도'">
        ,`tr_result`, `tr_earnrate`
        </if>
        , `tr_date`) 
        VALUES (#{assetNm}, #{assetCatgNm}, #{trMethod}, #{trAmt}, #{trPrice}, #{trTotprice}, #{trCost}
        <if test="trMethod == '매도'">
        , #{trResult}, #{trEarnrate}
        </if>
        , #{trDate});
    </insert>
    
    <update id="updateMyAsset" parameterType="com.myasset.myasset.vo.MyAssetVo">
    INSERT INTO `myasset`.`myassets` (
         `asset_nm`
         <if test="assetCatgNm != null and assetCatgNm != ''">
         ,`asset_catg_nm` 
         </if>
         <if test="assetAmt != null and assetAmt != ''">
         ,`asset_amt` 
         </if>
         <if test="assetPrice != null and assetPrice != ''">
         ,`asset_price`
         </if>
         <if test="assetTotprice != null and assetTotprice != ''">
         ,`asset_totprice`
         </if>
         <if test="assetNowTotal != null and assetNowTotal != ''">
         ,`asset_now_total`
         </if>
         <if test="assetNowAvg != null and assetNowAvg != ''">
         ,`asset_now_avg`
         </if>
    ) VALUES (
        #{assetNm}
        <if test="assetCatgNm != null and assetCatgNm != ''">
        ,#{assetCatgNm}
        </if>
        <if test="assetAmt != null and assetAmt != ''">
        ,#{assetAmt}
        </if>
        <if test="assetPrice != null and assetPrice != ''">
        ,#{assetPrice}
        </if>
        <if test="assetTotprice != null and assetTotprice != ''">
        ,#{assetTotprice}
        </if>
        <if test="assetNowTotal != null and assetNowTotal != ''">
        ,#{assetNowTotal}
        </if>
        <if test="assetNowAvg != null and assetNowAvg != ''">
        ,#{assetNowAvg}
        </if>
        
    ) 
    ON DUPLICATE KEY UPDATE
    `asset_nm` = #{assetNm}
    <if test="assetAmt != null and assetAmt != ''">
    ,`asset_amt` = #{assetAmt}  
    </if>
    <if test="assetPrice != null and assetPrice != ''">
    ,`asset_price` = #{assetPrice}
    </if>
    <if test="assetTotprice != null and assetTotprice != ''">
    ,`asset_totprice` = #{assetTotprice}
    </if>
    <if test="assetNowTotal != null and assetNowTotal != ''">
    ,`asset_now_total` = #{assetNowTotal}
    </if>
    <if test="assetNowAvg != null and assetNowAvg != ''">
    ,`asset_now_avg` = #{assetNowAvg}
    </if>
    </update>

    <update id="deleteAsset" parameterType="com.myasset.myasset.vo.MyAssetVo">
        UPDATE `myasset`.`myassets`
        SET `ers_yn` = #{ersYn}
        WHERE `asset_nm` = #{assetNm}
    </update>

    <select id="selectNowTotal" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="String">
    SELECT (
        (
        SELECT SUM(tr_totprice) - SUM(tr_cost) 
        buyTot
        FROM trade_record
        WHERE asset_nm = #{assetNm} AND tr_method = '매수'
        ORDER BY tr_date ASC
        )
        -
        (
        SELECT SUM(tr_totprice) - SUM(tr_cost) 
        sellTot
        FROM trade_record
        WHERE asset_nm = #{assetNm} AND tr_method = '매도'
        ORDER BY tr_date ASC)
        +
        (SELECT SUM(tr_result) TotR
        FROM trade_record
        WHERE asset_nm = #{assetNm} AND tr_method = '매도'
        ORDER BY tr_date ASC)
        )totP
        FROM DUAL
    </select>
    <insert id="insertTrHist" parameterType="com.myasset.myasset.vo.MyAssetVo">
        INSERT INTO `myasset`.`trade_hist` 
        (`asset_nm`, `asset_catg_nm`, `asset_amt`, `asset_price`, `asset_totprice`, `tr_result`, `hist_period_start`, `hist_period_end`, `asset_dividend`)
        VALUES (
            #{assetNm}
            , #{assetCatgNm}
            , #{assetAmt}
            , #{assetPrice}
            , #{assetTotprice}
            , #{trResult}
            , #{histPeriodStart}
            , #{histPeriodEnd}
            , #{assetDividend}
            );
    </insert>
    <update id="updateTrHist" parameterType="com.myasset.myasset.vo.MyAssetVo">
        UPDATE `myasset`.`trade_hist`
        SET
        `asset_nm` = #{assetNm}
        ,`asset_amt` = #{assetAmt}  
        ,`asset_price` = #{assetPrice}
        ,`asset_totprice` = #{assetTotprice}
        ,`tr_result` = #{trResult}
        ,`hist_period_start` = #{histPeriodStart}
        ,`hist_period_end` = #{histPeriodEnd}
        ,`asset_dividend` = #{assetDividend}
        WHERE 
            `hist_period_start` = #{histPeriodStart}
        AND `hist_period_end` = #{histPeriodEnd}
    </update>
    <select id="selectTrHist" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="com.myasset.myasset.vo.MyAssetVo">
        SELECT 
        hist_no
        FROM `myasset`.`trade_hist`
        WHERE 1 = 1
        <if test="histPeriodStart != null and histPeriodStart != ''">
        <![CDATA[
        /*시작일자*/
            AND asset_nm = #{assetNm}
        ]]>
        </if>
        <if test="histPeriodStart != null and histPeriodStart != ''">
        <![CDATA[
        /*시작일자*/
            AND hist_period_start >= DATE_FORMAT(#{histPeriodStart}, '%Y/%m/%d')
        ]]>
        </if>
        <if test="histPeriodEnd != null and histPeriodEnd != ''">
        <![CDATA[
            /*종료일자*/
            AND hist_period_end <= DATE_FORMAT(#{histPeriodEnd}, '%Y/%m/%d')
        ]]>
        </if>
    </select>
    <select id="selectTrHistEach" parameterType="com.myasset.myasset.vo.MyAssetVo" resultType="com.myasset.myasset.vo.MyAssetVo">
        SELECT 
            asset_nm,
            asset_catg_nm,
            asset_amt,
            asset_price,
            asset_totprice,
            tr_result,
            hist_period_start,
            hist_period_end,
            asset_dividend
        FROM `myasset`.`trade_hist`
        WHERE 1 = 1
        <if test="assetNm != null and assetNm != ''">
        AND asset_nm = #{assetNm}
        </if>
        <if test="histPeriodStart != null and histPeriodStart != ''">
        <![CDATA[
        /*시작일자*/
            AND hist_period_start >= DATE_FORMAT(#{histPeriodStart}, '%Y/%m/%d')
        ]]>
        </if>
        <if test="histPeriodEnd != null and histPeriodEnd != ''">
        <![CDATA[
            /*종료일자*/
            AND hist_period_end <= DATE_FORMAT(#{histPeriodEnd}, '%Y/%m/%d')
        ]]>
        </if>
        ORDER BY hist_period_end ASC
        <if test="recordCountPerPage != null and recordCountPerPage != ''">
        LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
        </if>
    </select>

    <select id="selectStockCd" parameterType="String" resultType="String">
    SELECT stock_code FROM stock_list
    WHERE stock_name = #{assetNm}
    </select>
    <select id="selectLastSiseDay" resultType="String">
    SELECT DATE_FORMAT(MAX(REG_DATE), '%Y%m%d') FROM `myasset`.`stock_sise`
    </select>
    <insert id="insertSiseData" parameterType="com.myasset.myasset.vo.SiseVo">
        INSERT INTO `myasset`.`stock_sise` 
        (`sise_date`, `asset_nm`, `st_price`, `hi_price`, `lo_price`, `ed_price`, `tr_amt`, `reg_date`)
        VALUES (
            #{siseDate}
            , #{assetNm}
            , #{stPrice}
            , #{hiPrice}
            , #{loPrice}
            , #{edPrice}
            , #{trAmt}
            , sysdate()
            )
        ON DUPLICATE KEY UPDATE
        SISE_DATE = #{siseDate}
        ,ASSET_NM = #{assetNm}
    </insert>
    <select id="chkExistSiseData" parameterType="com.myasset.myasset.vo.SiseVo" resultType="com.myasset.myasset.vo.SiseVo">
    SELECT * FROM `myasset`.`stock_sise`
    WHERE asset_nm = #{assetNm}
    and date = #{date}
    </select>

    <select id="selectStockData" parameterType="com.myasset.myasset.vo.SiseVo" resultType="com.myasset.myasset.vo.SiseVo">
    SELECT * FROM stock_sise
    WHERE asset_nm  LIKE CONCAT('%', #{assetNm}, '%')
    AND SISE_DATE = (select MAX(DATE) FROM stock_sise WHERE asset_nm  LIKE CONCAT('%', #{assetNm}, '%'))
    </select>
    <select id="selectMonthSiseData" parameterType="com.myasset.myasset.vo.SiseVo" resultType="com.myasset.myasset.vo.SiseVo">
    SELECT DATE_FORMAT(sise_date, '%Y%m') AS SISE_DATE
    , asset_nm
    , ROUND(AVG(st_price), 0) AS ST_PRICE
    , ROUND(AVG(hi_price), 0) AS HI_PRICE
    , ROUND(AVG(lo_price), 0) AS LO_PRICE
    , ROUND(AVG(ed_price), 0) AS ED_PRICE
    , ROUND(AVG(tr_amt), 0) AS TR_AMT
    FROM stock_sise
    WHERE asset_nm = #{assetNm}
    GROUP BY DATE_FORMAT(sise_date, '%Y%m')
    </select>
    
    <select id="selectEachMonthTrDateByAssetNm" parameterType="com.myasset.myasset.vo.SummaryVo" resultType="com.myasset.myasset.vo.SummaryVo">
    SELECT 
				DATE_FORMAT(tr_date, '%Y%m') AS TR_DATE
				,ASSET_NM
				,ASSET_CATG_NM
				,TR_METHOD
				,SUM(TR_AMT) AS TR_AMT
				,ROUND(AVG(TR_PRICE), 0) AS TR_PRICE
				,SUM(TR_TOTPRICE) AS TR_TOTPRICE
				,SUM(TR_COST) AS TR_COST
				,SUM(TR_RESULT) AS TR_RESULT
			FROM trade_record A 
			WHERE ASSET_NM = #{assetNm}
			AND TR_METHOD = '매수'
			GROUP BY DATE_FORMAT(tr_date, '%Y%m')
        UNION
        SELECT 
				DATE_FORMAT(tr_date, '%Y%m') AS TR_DATE
				,ASSET_NM
				,ASSET_CATG_NM
				,TR_METHOD
				,SUM(TR_AMT) AS TR_AMT
				,ROUND(AVG(TR_PRICE), 0) AS TR_PRICE
				,SUM(TR_TOTPRICE) AS TR_TOTPRICE
				,SUM(TR_COST) AS TR_COST
				,SUM(TR_RESULT) AS TR_RESULT
			FROM trade_record A 
			WHERE ASSET_NM = #{assetNm}
			AND TR_METHOD = '매도'
			GROUP BY DATE_FORMAT(tr_date, '%Y%m')
    </select>
    <insert id="insertEachMonthData" parameterType="com.myasset.myasset.vo.SummaryVo">
        INSERT INTO `myasset`.`each_month_tr_data` 
        (`tr_date`, `asset_nm`, `asset_catg_nm`, `tr_method`, `tr_amt`, `tr_price`, `tr_tot`, `tr_cost`, `tr_result`,RGST_DT,UPDT_DT)
        VALUES (
            #{trDate}
            ,#{assetNm}
            ,#{assetCatgNm}
            ,#{trMethod}
            ,#{trAmt}
            ,#{trPrice}
            ,#{trTotPrice}
            ,#{trCost}
            ,#{trResult}
        , NOW(), NOW())
        ON DUPLICATE KEY UPDATE
        TR_DATE = #{trDate}
        ,`asset_nm` = #{assetNm}
        ,ASSET_CATG_NM = #{assetCatgNm}
        ,TR_METHOD = #{trMethod}
        <if test="trAmt != null and trAmt != ''">
        ,TR_AMT = #{trAmt}  
        </if>
        <if test="trPrice != null and trPrice != ''">
        ,TR_PRICE = #{trPrice}
        </if>
        <if test="trTotPrice != null and trTotPrice != ''">
        ,TR_TOT = #{trTotPrice}
        </if>
        <if test="trCost != null and trCost != ''">
        ,TR_COST = #{trCost}
        </if>
        <if test="trResult != null and trResult != ''">
        ,TR_RESULT = #{trResult}
        </if>
        ,UPDT_DT = NOW()
    </insert>
    <select id="selectEachMonthData" parameterType="com.myasset.myasset.vo.SummaryVo" resultType="com.myasset.myasset.vo.SummaryVo">
    SELECT 
        BUY.TR_DATE
        ,BUY.ASSET_NM

        ,IFNULL(BUY.TR_AMT - SELL.TR_AMT, BUY.TR_AMT) AMT_CHANGE
        ,ROUND(IFNULL(BUY.TR_TOT - SELL.TR_TOT, BUY.TR_TOT) / IFNULL(BUY.TR_AMT - SELL.TR_AMT, BUY.TR_AMT),0) PRICE_CHANGE
        ,IFNULL(BUY.TR_TOT - SELL.TR_TOT, BUY.TR_TOT) TOT_CHANGE
        ,IFNULL(BUY.TR_RESULT + SELL.TR_RESULT, SELL.TR_RESULT) TR_RESULT
        
    FROM

        (
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매수'
        ) BUY
        LEFT OUTER JOIN(
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매도'
        ) SELL
        ON (BUY.TR_DATE = SELL.TR_DATE)


    UNION

        SELECT 
        SELL.TR_DATE
        ,SELL.ASSET_NM

        ,IFNULL(BUY.TR_AMT - SELL.TR_AMT, - SELL.TR_AMT) AMT_CHANGE
        ,ROUND(IFNULL(BUY.TR_TOT - SELL.TR_TOT, SELL.TR_TOT) / IFNULL(BUY.TR_AMT - SELL.TR_AMT, SELL.TR_AMT),0) PRICE
        ,IFNULL(BUY.TR_TOT - SELL.TR_TOT, - SELL.TR_TOT) TOT_CHANGE
        ,IFNULL(BUY.TR_RESULT + SELL.TR_RESULT, SELL.TR_RESULT) TR_RESULT

        FROM
        (
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매수'
        ) BUY
        RIGHT OUTER JOIN(
            SELECT
                TR_DATE
                ,ASSET_NM
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매도'
        ) SELL
        ON (BUY.TR_DATE = SELL.TR_DATE)
        UNION

        SELECT  
            A.TR_DATE AS TR_DATE
            ,CONCAT(ASSET_NM,'_배당')
            ,0 AS AMT_CHANGE
            ,0 AS PRICE
            ,SUM(A.TR_TOTPRICE) AS TOT_CHANGE
            ,0 AS TR_RESULT
		FROM (
            SELECT  
                DATE_FORMAT(TR_DATE, '%Y%m') AS TR_DATE
                ,ASSET_NM
                ,TR_TOTPRICE
            FROM trade_record s
            WHERE asset_nm = #{assetNm}
            AND tr_method LIKE '%배당%'
		) A
		GROUP BY A.TR_DATE

    ORDER BY TR_DATE
    </select>
<select id="selectEachMonthDataForChart" parameterType="com.myasset.myasset.vo.SummaryVo" resultType="com.myasset.myasset.vo.SummaryVo">
    SELECT 
        IFNULL(BUY.TR_DATE, SELL.TR_DATE) AS TR_DATE
        ,IFNULL(BUY.ASSET_NM, SELL.ASSET_NM) AS ASSET_NM
        ,IFNULL(BUY.TR_METHOD, '매수') AS B_METHOD
        ,BUY.TR_AMT AS BUY_AMT
        ,BUY.TR_TOT AS BUY_TOT
        ,ROUND(BUY.TR_TOT / BUY.TR_AMT, 0) AS BUY_PRICE
        ,BUY.TR_RESULT AS BUY_RESULT
        ,IFNULL(SELL.TR_METHOD, '매도') AS SELL_METHOD
        ,SELL.TR_AMT AS SELL_AMT
        ,SELL.TR_TOT AS SELL_TOT
        ,ROUND(SELL.TR_TOT / SELL.TR_AMT, 0) AS SELL_PRICE
        ,SELL.TR_RESULT AS S_RESULT
    FROM

        (
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_METHOD
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매수'
        ) BUY
        LEFT OUTER JOIN(
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_METHOD
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매도'
        ) SELL
        ON (BUY.TR_DATE = SELL.TR_DATE)


    UNION

	SELECT 
        IFNULL(BUY.TR_DATE, SELL.TR_DATE) AS TR_DATE
        ,IFNULL(BUY.ASSET_NM, SELL.ASSET_NM) AS ASSET_NM
        ,IFNULL(BUY.TR_METHOD, '매수') AS B_METHOD
        ,BUY.TR_AMT AS BUY_AMT
        ,BUY.TR_TOT AS BUY_TOT
        ,ROUND(BUY.TR_TOT / BUY.TR_AMT, 0) AS BUY_PRICE
        ,BUY.TR_RESULT AS BUY_RESULT
        ,IFNULL(SELL.TR_METHOD, '매도') AS SELL_METHOD
        ,SELL.TR_AMT AS SELL_AMT
        ,SELL.TR_TOT AS SELL_TOT
        ,ROUND(SELL.TR_TOT / SELL.TR_AMT, 0) AS SELL_PRICE
        ,SELL.TR_RESULT AS S_RESULT
    FROM

        (
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_METHOD
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매수'
        ) BUY
        RIGHT OUTER JOIN(
            SELECT 
                TR_DATE
                ,ASSET_NM
                ,TR_METHOD
                ,TR_AMT
                ,(TR_TOT + TR_COST) TR_TOT
                ,TR_RESULT
            FROM each_month_tr_data
            WHERE ASSET_NM LIKE CONCAT(#{assetNm},'%')
            AND TR_METHOD = '매도'
        ) SELL
        ON (BUY.TR_DATE = SELL.TR_DATE)


    ORDER BY TR_DATE
    </select>

    <select id="selectDividendData" parameterType="com.myasset.myasset.vo.SummaryVo" resultType="com.myasset.myasset.vo.SummaryVo">
    SELECT 
        DATE_FORMAT(TR_DATE, '%Y%m') AS TR_DATE
        ,ASSET_NM
        ,ASSET_CATG_NM
        ,TR_METHOD
        ,TR_TOTPRICE
    FROM trade_record
    WHERE TR_METHOD LIKE '배당금%'
    </select>
    <insert id="insertDividendData" parameterType="com.myasset.myasset.vo.SummaryVo">
    INSERT INTO each_month_tr_data 
    (TR_DATE, ASSET_NM, ASSET_CATG_NM, TR_METHOD, TR_TOT, RGST_DT, UPDT_DT)
    VALUES(#{trDate}, #{assetNm}, #{assetCatgNm}, #{trMethod}, #{trTotPrice}, NOW(), NOW())
    ON DUPLICATE KEY UPDATE
        TR_DATE = #{trDate}
        ,ASSET_NM = #{assetNm}
        ,ASSET_CATG_NM = #{assetCatgNm}
        ,TR_METHOD = #{trMethod}
        <if test="trTotPrice != null and trTotPrice != ''">
        ,TR_TOT = #{trTotPrice}
        </if>
        ,UPDT_DT = NOW()
    </insert>
    <insert id="insertMyAssetChanges" parameterType="com.myasset.myasset.vo.SummaryVo">
    INSERT INTO `myasset`.`myassets_hist` (`tr_date`, `asset_nm`, `asset_catg_nm`, `asset_amt`, `asset_price`, `asset_totprice`, `amt_change`, `tr_state`, `tot_change`
    , `need_recover_amt`, `need_recover_tot`, `recovered_amt`, `recovered_tot`, `recover_result`, `tr_result`, `is_last`, `rgst_dt`, `updt_dt`) 
    VALUES (#{trDate}, #{assetNm}, #{assetCatgNm}
    , #{trAmt} -- asset_amt

    ,CASE WHEN <![CDATA[#{trAmt} > 0]]> THEN ROUND(  #{trTotPrice} / #{trAmt}, 0) ELSE 0 END -- asset_price

    , #{trTotPrice} -- asset_totprice
    , #{amtChange} -- amt_change
    , #{trState} -- tr_state
    , #{totChange} -- tot_change
    , #{needRecoverAmt} -- need_recover_amt
    , #{needRecoverTot} -- need_recover_tot
    , #{recoveredAmt} -- recovered_amt
    , #{recoveredTot} -- recovered_tot
    , #{recoverResult} -- recover_result
    , #{trResult} -- tr_result
    , #{isLast} -- is_last
    , NOW(), NOW())
    ON DUPLICATE KEY UPDATE
    TR_DATE = #{trDate}
    ,ASSET_NM = #{assetNm}
        <if test="trAmt != null and trAmt != ''">
        ,asset_amt = #{trAmt}  
        </if>
        <if test="trTotPrice != null and trTotPrice != ''">
        ,asset_totprice = #{trTotPrice}
        </if>
        <if test="trTotPrice != null and trTotPrice != '' and trAmt != null and trAmt != ''">
        ,asset_price = 
        CASE WHEN <![CDATA[#{trTotPrice} > 0 AND #{trAmt} > 0]]> THEN ROUND(  #{trTotPrice} / #{trAmt}, 0)
        ELSE 0 END
        </if>
        <if test="amtChange != null and amtChange != ''">
        ,amt_change = #{amtChange}  
        </if>
        <if test="trState != null and trState != ''">
        ,tr_state = #{trState}
        </if>
        <if test="totChange != null and totChange != ''">
        ,tot_change = #{totChange}  
        </if>
        <if test="needRecoverAmt != null and needRecoverAmt != ''">
        ,need_recover_amt = #{needRecoverAmt}
        </if>
        <if test="needRecoverTot != null and needRecoverTot != ''">
        ,need_recover_tot = #{needRecoverTot}  
        </if>
        <if test="recoveredAmt != null and recoveredAmt != ''">
        ,recovered_amt = #{recoveredAmt}
        </if>
        <if test="recoveredTot != null and recoveredTot != ''">
        ,recovered_tot = #{recoveredTot}  
        </if>
        <if test="recoverResult != null and recoverResult != ''">
        ,recover_result = #{recoverResult}
        </if>
        <if test="trResult != null and trResult != ''">
        ,TR_RESULT = #{trResult}
        </if>
        <choose>
            <when test="isLast != null and isLast != ''">
                ,IS_LAST = #{isLast}
            </when>
            <otherwise>
                ,IS_LAST = 'N'
            </otherwise>
        </choose>

        ,updt_dt = NOW()
    </insert>
    <select id="selectDataforGridAssetInfo" resultType="com.myasset.myasset.vo.SummaryVo">
        SELECT 
            tr_date
            , asset_nm
            , asset_catg_nm
            , asset_amt AS TR_AMT
            , asset_price AS TR_PRICE
            , asset_totprice AS TR_TOT_PRICE
            , tr_result AS TR_RESULT
            , tr_state
        FROM myassets_hist
        WHERE IS_LAST = 'Y'
        UNION
        SELECT 
            0 AS tr_date
            ,'totalEarn' AS asset_nm
            , 0 AS asset_catg_nm
            , 0 AS asset_amt
            , 0 AS asset_price
            , 0 AS asset_totprice
            , SUM(TR_RESULT) AS tr_result
            , 'settle' AS tr_state

        FROM myassets_hist
        WHERE IS_LAST = 'Y'
    </select>
    <select id="selectDataforPopupHist" resultType="com.myasset.myasset.vo.SummaryVo">
        SELECT 
            tr_date
            , asset_nm
            , asset_catg_nm
            , asset_amt AS TR_AMT
            , asset_price AS TR_PRICE
            , asset_totprice AS TR_TOT_PRICE
            , tr_result AS TR_RESULT
            , amt_change
            , tot_change
            , tr_state
            , need_recover_amt
            , need_recover_tot
            , recovered_amt
            , recovered_tot
            , recover_result
        FROM MYASSETS_HIST
        WHERE ASSET_NM = #{assetNm}
        ORDER BY TR_DATE
    </select>
</mapper> 